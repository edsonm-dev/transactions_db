
--STORED PROCEDURE TO INSERT A NEW TRANSACTION INTO THE TRANSACTION TABLE WITH FOR EXAMPLE A PYTHON CODE
--AFTER THE INSERT, THE CODE TRIES TO FIND THE SUBCATEGORY ID BASED ON THE EXPRESSION TABLE

USE Test;

GO 

CREATE PROCEDURE InsertUpdateTransactions (
	@Owner NVARCHAR(50),
	@Date DATE,
	@Description NVARCHAR(200),
	@Amount DECIMAL(20, 2)
) 
AS BEGIN

	SET NOCOUNT ON
	INSERT INTO
		Fact.Transactions ([OWNERID], [DATEKEY], [Description], [Amount])
	VALUES
		(@Owner, @Date, @Description, @Amount) DECLARE @NewSubID INT

	SELECT
		TOP 1 @NewSubID = e.SubCategoryID
	FROM
		Dimension.Expressions e
	WHERE
		@Description LIKE '%' + e.Expression + '%'
	ORDER BY
		LEN(e.expression) DESC
	UPDATE Fact.Transactions
	SET
		SUBCATEGORYID = @NewSubId
	WHERE
		TransactionID = SCOPE_IDENTITY()

END;


GO

--CREATING THE SAME AUTOMATION WITH TRIGGER FOR PRACTICE
--IF THERE IS A NEW TRANSACTION INSERTED IN THE TRANSACTIONS TABLE, IT TRIES TO FIND THE SUBCATEGORY ID IN THE EXPRESSION TABLE

CREATE TRIGGER SubCategoryUpdate 
ON Fact.Transactions AFTER INSERT

AS BEGIN 
	
	DECLARE @NewSubID INT

	SELECT
		TOP 1 @NewSubID = e.SubCategoryID
	FROM
		Dimension.Expressions e
		INNER JOIN inserted i ON i.[Description] LIKE '%' + e.Expression + '%'
	ORDER BY
		LEN(e.Expression) DESC

	UPDATE Fact.Transactions
	SET
		SubCategoryID = @NewSubID
	FROM
		Fact.Transactions t
		INNER JOIN inserted i ON i.TransactionID = t.TransactionID 

END;

GO

--FUNCTION FOR UPDATING ALL ROWS' SUBCATEGORY
--USED BY THE PROCEDURE BELOW
--IT CHECKS IF THERE IS AN EXPRESSION IN THE EXPRESSIONS TABLE THAT IS CONTAINED IN THE DESCRIPTION AND RETURNS THE ID
--IF THERE ARE MULTIPLE MATCHES IT WILL PRIORITIZE THE ONE THAT IS THE LONGEST

CREATE FUNCTION FindSubCategoryID (
	@Description NVARCHAR(200)) 
RETURNS INT 
AS BEGIN 

	DECLARE @NewSubID INT

	SELECT
		TOP 1 @NewSubID = e.SubCategoryID
	FROM
		Dimension.Expressions e
	WHERE
		@Description LIKE '%' + e.Expression + '%'
	ORDER BY
		LEN(e.expression) DESC RETURN @NewSubID 

END;

GO

--PROCEDURE IF WE WANT TO UPDATE ALL SUBCAT IDS
--THIS USES THE FindSubCategoryID FUNCTION CREATED ABOVE

CREATE PROCEDURE UpdateAllSubCatID 
AS BEGIN

	SET NOCOUNT ON

	UPDATE Fact.Transactions
	SET
		SUBCATEGORYID = dbo.FindSubCategoryID ([Description]) 

END;

GO